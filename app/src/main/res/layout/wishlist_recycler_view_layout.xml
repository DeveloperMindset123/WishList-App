<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_marginTop="7dp"
    android:layout_width="match_parent"
    android:layout_height="40dp">

    <!--Requires manual adjustment of the height, play around with it a bit to find what works based on the screen and content of the application, using wrap_content or match_parent will take up too much screen-->

    <!--Changing font opacity for the name of the store-->

    <TextView
        android:id="@+id/DisplayTitle"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Display Title"
        android:textSize="20dp"
        android:textStyle="bold"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintHorizontal_bias="0.093"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintVertical_bias="0.052" />


    <TextView
        android:id="@+id/DisplayPrice"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Price"
        android:textSize="14dp"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintHorizontal_bias="0.897"
        app:layout_constraintStart_toEndOf="@+id/DisplayTitle"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintVertical_bias="0.063" />

    <TextView
        android:id="@+id/DisplayLink"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginEnd="24dp"
        android:text="Link to item"
        android:textSize="14dp"
        android:linksClickable="true"
        android:textColorLink="#0000FF"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintHorizontal_bias="1.0"
        app:layout_constraintStart_toEndOf="@+id/DisplayTitle"
        app:layout_constraintTop_toBottomOf="@+id/DisplayPrice"
        app:layout_constraintVertical_bias="0.0" />

</androidx.constraintlayout.widget.ConstraintLayout>

<!--This file is the xml layout the recycler view will use
- Additional information in regards to the purpose of this file

- Decide how the list or grid looks. ordinarily, you can use one of Recycler's views library standard layouts

- Design how each element in the list looks and behaves. Based on this design, extend the viewHolder class. The version of ViewHolder provides all the functionalities relevant to the list items. The view holder is a "wrapper" around a view, and that view is managed by RecyclerView

- Define the adapter, that associates your data with the ViewHolder class.
-->